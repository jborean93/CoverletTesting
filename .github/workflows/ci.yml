name: Test Coverlet
on:
  push:
    branches:
    - main

  pull_request:
    branches:
    - main

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  POWERSHELL_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  BUILD_CONFIGURATION: ${{ fromJSON('["Debug", "Release"]')[github.ref == 'refs/heads/main'] }}

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Build Assembly
      shell: pwsh
      run: ./build.ps1

    - name: Capture Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MyAssemblyFX
        path: src/MyAssembly/bin/${{ env.BUILD_CONFIGURATION }}/net472/publish/*

    - name: Capture Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MyAssemblyNet
        path: src/MyAssembly/bin/${{ env.BUILD_CONFIGURATION }}/net6.0/publish/*

  test:
    name: test
    needs:
    - build
    runs-on: ${{ matrix.info.os }}
    strategy:
      fail-fast: false
      matrix:
        info:
        - os: windows-latest
          use_win_ps: false
        - os: windows-latest
          use_win_ps: true
        - os: ubuntu-latest
          use_win_ps: false

    steps:
    - uses: actions/checkout@v3

    - name: Restore Built Assembly
      uses: actions/download-artifact@v3
      with:
        name: MyAssembly${{ fromJSON('["Net", "FX"]')[matrix.info.use_win_ps] }}
        path: bin

    - name: Install Coverlet
      shell: sh
      run: |
        dotnet tool install --global coverlet.console

    - name: Run Tests
      shell: pwsh
      run: ./test.ps1
      env:
        TEST_EXE: ${{ fromJson('["pwsh", "powershell"]')[matrix.info.use_win_ps == true] }}
